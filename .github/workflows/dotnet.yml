# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  DOTNET_VERSION: 8.0.x
  NUGET_VERSION: 1.0.1

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        python: ["3.12"]
    runs-on: "${{ matrix.os }}"

    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python }}"
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: Restore dependencies
        run: dotnet restore
        working-directory: src
      - name: Build
        run: dotnet build --no-restore
        working-directory: src
      - name: Test
        run: dotnet test --no-build --verbosity normal
        working-directory: src

  publish-nuget:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: Restore dependencies
        run: dotnet restore
        working-directory: src

      - name: Build release packages
        run: dotnet build --no-restore -c Release
        working-directory: src

      - name: Publish NuGet package CSnakes
        run: dotnet pack src/CSnakes --no-build -c Release -o ./nuget -p:PackageVersion='${{ env.NUGET_VERSION }}' --version--suffix 'alpha${{ github.run_number }}'

      - name: Publish NuGet package CSnakes.Runtime
        run: dotnet pack src/CSnakes.Runtime --no-build -c Release -o ./nuget -p:PackageVersion='${{ env.NUGET_VERSION }}' --version--suffix 'alpha${{ github.run_number }}'

      - name: Publish to GitHub packages
        run: dotnet nuget push ./nuget/*.nupkg --source "github"
        env:
          NUGET_API_KEY: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish NuGet packages as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nuget-packages
          path: ./nuget
